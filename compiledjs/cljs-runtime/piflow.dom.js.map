{"version":3,"sources":["piflow/dom.cljs"],"mappings":";AAOA,4BAAA,5BAAMA,gEAAaC;AAAnB,AACE,OAACC,kDAAU,iBAAAC,qBAAA,kDAAAC;AAAA,AAAA,YAAAC,kBAAA,KAAA;AAAA,AAAA,IAAAD,eAAAA;;AAAA,AAAA,IAAAE,qBAAA,AAAAC,cAAAH;AAAA,AAAA,GAAAE;AAAA,AAAA,IAAAF,eAAAE;AAAA,AAAA,GAAA,AAAAE,6BAAAJ;AAAA,IAAAK,kBAo8EsC,AAAAuF,sBAAA5F;IAp8EtCM,qBAAA,AAAAC,gBAAAF;IAAAG,WAAA,AAAAC,uBAAAH;AAAA,AAAA,GAAA,AAAA,iBAAAI,WAAA;;AAAA,AAAA,GAAA,CAAAA,WAAAJ;AAAA,IAAAK,aAAA,AAAAC,eAAAP,gBAAAK;QAAA,AAAAG,4CAAAF,WAAA,IAAA,/DAAOY;QAAP,AAAAV,4CAAAF,WAAA,IAAA,/DAASa;AAAT,AAAA,AAAA,AAAAV,uBAAAN,SACE,mBAAA,sBAAA,xCAAK,AAACiB,eAAKF,OAAY,AAACE,eAAKD;;AAD/B,eAAA,CAAAd,WAAA;;;;AAAA;;;;;AAAA,OAAAK,qBAAA,AAAAC,gBAAAR,UAAA,AAAAS,wCAAA,AAAAC,qBAAAlB;;AAAA,OAAAe,qBAAA,AAAAC,gBAAAR,UAAA;;;AAAA,IAAAW,aAAA,AAAAC,gBAAApB;QAAA,AAAAa,4CAAAM,WAAA,IAAA,/DAAOI;QAAP,AAAAV,4CAAAM,WAAA,IAAA,/DAASK;AAAT,AAAA,OAAAH,sEAAA,AAAAJ,wCAAA,AAAAK,eAAAtB,9GACE,mBAAA,sBAAA,xCAAK,AAACyB,eAAKF,OAAY,AAACE,eAAKD;;;AAD/B;;;;GAAA,KAAA;;AAAA,AAAA,OAAAzB,mBAAYF;;;AAGzB,4BAAA,5BAAM6B,gEAAaC;AAAnB,AACE,IAAMC,cAAY,6DAAA,7DAACC,mDAAWF;AAA9B,AACE,OAACG,8CAAMC,eAAK,iBAAAhC,qBAAA,kDAAAiC;AAAA,AAAA,YAAA/B,kBAAA,KAAA;AAAA,AAAA,IAAA+B,eAAAA;;AAAA,AAAA,IAAA9B,qBAAA,AAAAC,cAAA6B;AAAA,AAAA,GAAA9B;AAAA,AAAA,IAAA8B,eAAA9B;AAAA,AAAA,GAAA,AAAAE,6BAAA4B;AAAA,IAAA3B,kBA+7EmC,AAAAuF,sBAAA5D;IA/7EnC1B,qBAAA,AAAAC,gBAAAF;IAAA4B,WAAA,AAAAxB,uBAAAH;AAAA,AAAA,GAAA,AAAA,iBAAA4B,WAAA;;AAAA,AAAA,GAAA,CAAAA,WAAA5B;AAAA,WAAA,AAAAM,eAAAP,gBAAA6B,tCAAME;AAAN,AAAA,AAAA,AAAAtB,uBAAAmB,SACE,iBAAMI,MAAI,wDAAA,xDAACR,mDAAWO;AAAtB,AAAA,uDACG,AAACE,gDAAQ,AAAClB,gBAAMiB,MAAM,4CAAK,AAACE,iBAAOF;;;AAFxC,eAAA,CAAAH,WAAA;;;;AAAA;;;;;AAAA,OAAAnB,qBAAA,AAAAC,gBAAAiB,UAAA,AAAAE,wCAAA,AAAAjB,qBAAAc;;AAAA,OAAAjB,qBAAA,AAAAC,gBAAAiB,UAAA;;;AAAA,WAAA,AAAAb,gBAAAY,vBAAMI;AAAN,AAAA,OAAAf,eACE,iBAAMgB,MAAI,wDAAA,xDAACR,mDAAWO;AAAtB,AAAA,uDACG,AAACE,gDAAQ,AAAClB,gBAAMiB,MAAM,4CAAK,AAACE,iBAAOF;KAFxC,AAAAF,wCAAA,AAAAb,eAAAU;;;AAAA;;;;GAAA,KAAA;;AAAA,AAAA,OAAAjC,mBAAW6B;;;AAI3B,AAAA,oBAAA,4BAAAY,hDAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,uDAAA,CAAA,UAAA,MAAAF;;;AAAA,AAAA,CAAA,yDAAA,zDAAME,oEAAQK,GAAKC;AAAnB,AACE,AAACC,uGAAM,AAAAC,6CAAA,mCAAA;;AACP,IAAAC,qBAAmB,iBAAAE,WAA2B,AAACE,+CAAOR;IAAnCO,eAAC,AAAAJ,6CAAA,mCAAA;AAAD,AAAA,QAAAI,6CAAAA,2CAAAD,YAAAC,uBAAAD;;AAAnB,AAAA,GAAA,CAAAF,sBAAA;AAAA;;AAAA,aAAAA,TAAYC;AAAZ,AACE,QAACA,uCAAAA,6CAAAA,RAAOJ,yBAAAA;;;;AAHZ,CAAA,4CAAA,5CAAMN;;AAAN;AAAA,CAAA,sCAAA,WAAAC,jDAAMD;AAAN,AAAA,IAAAE,WAAA,AAAA5B,gBAAA2B;IAAAA,eAAA,AAAAE,eAAAF;AAAA,AAAA,IAAAG,qBAAA;AAAA,AAAA,OAAAA,wDAAAF,SAAAD;;;AAAA,AAKA,yBAAA,zBAAMa,0DAAaC,QAAQC;AAA3B,AACE,OAAeD,qBAASC;;AAE1B,yBAAA,zBAAMC,0DAAaF,QAAQC,UAAUE;AAArC,AACE,OAAeH,qBAAQC,UAAUE;;AAGnC,+BAAA,/BAAMC,sEAAmBC,GAAG3C,EAAEC;AAA9B,AACE,IAAM2C,YAAU,AAACzC,0BAAY,0BAAA,1BAACkC,uBAAYM;AAA1C,AACE,iCAAA,1BAACH,uBAAYG,WAAW,AAACtE,0BAAY,AAACwE,8CAAMD,UAAU5C,EAAEC;;AAE5D,yBAAA,zBAAM6C,0DAAaC,MAAMR;AAAzB,AACE,OAAe,AAAiBS,wBAAYD,oBAAOR;;AAErD,yBAAA,zBAAMU,0DAAaF,MAAMR,UAAUE;AAAnC,AACE,OAAe,AAAiBO,wBAAYD,oBAAOR,UAAUE;;AAK/D,sCAAA,tCAAMS,oFAA0BC;AAAhC,AACE,OAAcC,0BAAiB,AAAiBJ,wBAAYG;;AAE9D,4BAAA,5BAAME,gEAAgBF;AAAtB,AACE,OAAc,AAAiB,AAAiBH,wBAAYG,sCAC9C,AAAiBH,wBAAYG;;AAE7C,uBAAA,vBAAMG,sDACHP,MAAMQ;AADT,AAEE,IAAMC,WAAS,AAAiBR,wBAAYD;IACtCU,cAAY,AAAcD;IAC1BE,aAAW,gCAAA,hCAACrB,uBAAYmB;IACxBG,WAAS,iBAAAC,SAAA,mFAAA,mDAAmB,6CAAA,2CAAA,0EAAA,2CAAA,7MAACI,+IAAaN,gHAAiB,4CAAKX,gBAASQ;IAAhEM,oBAAA,AAAAC,wBAAAF,OAAA;AAAA,AAAA,AAAAG,2BAAAF,kBAAAD;;AAAAC;;AAHf,AAIE,AAAcJ,wBAAYD;;AAC1B,OAAcC,wBAAYE;;AAE9B,4BAAA,5BAAgBM,gEACbC;AADH,AAEE,AAAcd,0BAAiB,wBAAA,xBAAiBJ;;AAChD,OAAcI,0BAAiB,iBAAAe,SAAA,mFAAA,sEAAA,2CAAA,uDAAA,4BAA0DD;IAA1DL,oBAAA,AAAAC,wBAAAK,OAAA;AAAA,AAAA,AAAAJ,2BAAAF,kBAAAM;;AAAAN;;;AAGjC,yBAAA,zBAAMO,0DAAaF;AAAnB,AAA6B,OAACD,0BAAeC","names":["piflow.dom/sty-map>str","style-map","clojure.string.join","iter__5523__auto__","s__32679","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","cljs.core/count","b__32681","cljs.core/chunk-buffer","i__32680","vec__32682","cljs.core/-nth","cljs.core.nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__32678","cljs.core/chunk-rest","vec__32685","cljs.core/first","cljs.core/cons","cljs.core/rest","k","v","cljs.core/name","piflow.dom/sty-str>map","style-str","style-attrs","clojure.string.split","cljs.core.apply","cljs.core/conj","s__32689","b__32691","i__32690","iter__32688","attr","spl","cljs.core.keyword","cljs.core/second","var_args","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","piflow.dom/docall","seq32692","G__32693","cljs.core/next","self__5754__auto__","fn","args","cljs.core.print","cljs.core.into","temp__5808__auto__","fn-var","G__32695","fexpr__32694","cljs.core.symbol","piflow.dom/get-el-attr","element","attr-name","piflow.dom/set-el-attr","attr-value","piflow.dom/set-el-style-attr","el","el-stylem","cljs.core.assoc","piflow.dom/get-id-attr","DOMid","js/document","piflow.dom/set-id-attr","piflow.dom/remove-element-from-body","element-id","js/document.body","piflow.dom/remove-element","piflow.dom/reset-div","new-div","node-div","node-parent","node-style","new-node","v32696","el__11611__auto__","hipo.interpreter/create","hipo.core/set-hiccup!","cljs.core.conj","piflow.dom/reset-flux-div","new-flux","v32697","piflow.dom/update-flux","cljs.core/chunk-first"],"sourcesContent":["(ns piflow.dom\n  (:require\n   [clojure.string :as cstr]\n   [hipo.core :as hipo]))\n\n;; style-str  \"width:6em;height:6em;float:left;background-color:#eee;\"\n;; style-map {:width 6em, :height 6em, :float left, :background-color #eee}\n(defn sty-map>str [style-map] ;; html el.getAttribute() & el.setAttribute() use str style, as well does (hipo-create )\n  (cstr/join (for [[k v] style-map]\n               (str (name k) \":\" (str (name v)) \";\"))))\n\n(defn sty-str>map [style-str] ;; html el.getAttribute() & el.setAttribute() use str style, as well does (hipo-create )\n  (let [style-attrs (cstr/split style-str \";\")]\n    (apply conj (for [attr style-attrs]\n                  (let [spl (cstr/split attr \":\")]\n                    {(keyword (first spl)) (str (second spl))})))))\n\n(defn docall [fn & args]\n  (print (ns-publics 'piflow.home))\n  (when-some [fn-var ((ns-publics 'piflow.home) (symbol fn))]\n    (fn-var args)))\n\n(defn get-el-attr [element attr-name]\n  (.getAttribute element  attr-name))\n\n(defn set-el-attr [element attr-name attr-value]\n  (.setAttribute element attr-name attr-value))\n\n;(defn set-el-style [el style-map]) ;; el {:width \"1em\" :height \"1em\"}\n(defn set-el-style-attr [el k v] ;; DOMelement :keyname *value\n  (let [el-stylem (sty-str>map (get-el-attr el \"style\"))]\n    (set-el-attr el \"style\" (sty-map>str (assoc el-stylem k v)))))\n\n(defn get-id-attr [DOMid attr-name]\n  (.getAttribute (.getElementById js/document DOMid) attr-name))\n\n(defn set-id-attr [DOMid attr-name attr-value]\n  (.setAttribute (.getElementById js/document DOMid) attr-name attr-value))\n\n;; e.getAttribute(\"style\") => \"width:6em;height:6em;float:left;background-color:#eee;\"\n;; e.setAttribute(\"style\", \"width:6em;height:6em;float:left;background-color:#aaa;\")\n\n(defn remove-element-from-body [element-id]\n  (.removeChild js/document.body (.getElementById js/document element-id)))\n\n(defn remove-element [element-id]\n  (.removeChild (.-parentElement (.getElementById js/document element-id))\n                (.getElementById js/document element-id)))\n\n(defn reset-div ;; void function, STR, hiccup in, DOM manip out\n  [DOMid new-div]\n  (let [node-div (.getElementById js/document DOMid)\n        node-parent (.-parentNode node-div)\n        node-style (get-el-attr node-div \"style\")\n        new-node (hipo/create [:div (conj {:style node-style} {:id (str DOMid)}) new-div])]\n    (.removeChild node-parent node-div)\n    (.appendChild node-parent new-node)))\n\n(defn ^:private reset-flux-div ;; void function, hiccup in, DOM manip out\n  [new-flux]\n  (.removeChild js/document.body (.getElementById js/document \"flux\"))\n  (.appendChild js/document.body (hipo/create [:div#flux.pane {:style \"min-height:100vw;\"} new-flux])))\n  ;(.appendChild js/document.body (hipo/create [:div#flux.pane {:style \"width:100%;height:100%;position:absolute;z-index:1;width:100%;height:100%;\"} new-flux])))\n\n(defn update-flux [new-flux] (reset-flux-div new-flux))\n"]}