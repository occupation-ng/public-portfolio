{"version":3,"sources":["piflow/ui.cljs"],"mappings":"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","names":["js/piflow","js/piflow.ui","js/piflow.ui.Okabe-ito-colors","piflow.ui/Okabe-ito-colors","js/piflow.ui.Tol-bright-colors","piflow.ui/Tol-bright-colors","js/piflow.ui.Tol-muted-colors","piflow.ui/Tol-muted-colors","js/piflow.ui.Tol-light-colors","piflow.ui/Tol-light-colors","js/piflow.ui.grey-scale-colors","piflow.ui/grey-scale-colors","js/piflow.ui.rainbow-colors","piflow.ui/rainbow-colors","js/piflow.ui.pride-colors","piflow.ui/pride-colors","js/piflow.ui.ae-ignores","piflow.ui/ae-ignores","js/piflow.ui.ae-colors","piflow.ui/ae-colors","piflow.ui/color-pallete","piflow.ui/color-ignores","piflow.ui/random-color-w-ignore-list","pallete","ignore-list","filtered-pallete","f","i","cljs.core/count","p1__41645#","cljs.core.filter","cljs.core.not_EQ_","cljs.core.nth","cljs.core/rand-int","piflow.ui/a-e-random-color-w-o-aaa-eee","col","cljs.core._EQ_","rand-i","cljs.core.subs","piflow.ui/a-e-random-color","piflow.ui/random-color","piflow.ui/O_a-e-random-color","piflow.ui/H3opac","hex-color","opacity","rgb","piflow.util/color-unhex","clojure.string.join","piflow.ui/opacH3","piflow.ui/pane_top_left","piflow.ui/title","piflow.ui/title_box","piflow.ui/link_home","piflow.ui/form_email","piflow.ui/form_password","piflow.ui/form_selType","piflow.ui/form_tos","piflow.ui/tos_chk","piflow.ui/tos_agree","piflow.ui/a_tos","piflow.ui/form_submit_button","piflow.ui/form_signup_button","piflow.ui/cont","piflow.ui/selectType","piflow.ui/footer_","piflow.ui/r*","piflow.ui/s*","piflow.ui/f*","piflow.ui/hsty","cljs.core.conj","piflow.ui/sty","iter__5523__auto__","s__41647","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","b__41649","cljs.core/chunk-buffer","i__41648","vec__41650","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__41646","cljs.core/chunk-rest","vec__41653","cljs.core/first","cljs.core/cons","cljs.core/rest","k","v","cljs.core/name","piflow.ui/rsty","s__41657","b__41659","i__41658","vec__41660","iter__41656","vec__41663","piflow.ui/osty","s__41667","b__41669","i__41668","vec__41670","iter__41666","vec__41673","var_args","G__41677","piflow.ui/fsty","js/Error","s__41679","b__41681","i__41680","vec__41682","iter__41678","vec__41685","piflow.ui/spacern","cljs.core.doall","s__41689","b__41691","i__41690","iter__41688","spacer","js/document","piflow.util.invoke","piflow.ui/spacerm","s__41693","b__41695","i__41694","iter__41692","piflow.ui/spacer-dev","color","w","h","piflow.ui.fsty","piflow.ui/spacer","piflow.ui/spacer-fr","piflow.ui/change-bc","e","el","el-style","piflow.dom/get-el-attr","piflow.dom/set-el-attr","piflow.dom/sty-map>str","cljs.core.assoc","piflow.dom/sty-str>map","js/document.body","piflow.ui/body-bc","pane","pane-style","piflow.ui/rotate-el","rotation-degrees","style-map","piflow.ui/stripes","cols","piflow.ui/choose-utf8","purpose","close-list","move-list","resize-list","rescale-list","texture-list","misc-list","config-list","help-list","char-list","cljs.core.concat","piflow.ui/list-col","cljs.core/mod","piflow.ui/div-inp","s","str-em","piflow.ui/div-inp-a","href","js/piflow.ui.click-animation-transition","piflow.ui/click-animation-transition","piflow.ui/pane-div-inp-omd","title","on-mouse-down","js/window","piflow.ui/pane-div-inp-o","on-click","piflow.ui/div-inp-o","piflow.ui/cont-admin","font-size","js/piflow.ui.nav-title-list","piflow.ui/nav-title-list","cljs.core.atom","piflow.ui/cont-nav-title","cljs.core/deref","s__41697","b__41699","i__41698","iter__41696","title-map","piflow.util/index-of","piflow.dom/update-flux","piflow.util/invoke","piflow.ui/cont-title","piflow.ui/footer","msg","piflow.ui/draw-em-ruler","tag","n","cljs.core.into","s__41701","xs__6360__auto__","iterys__5519__auto__","s__41703","b__41705","i__41704","iter__41702","fs__5520__auto__","iter__41700","cljs.core.range","j","piflow.ui/remove-pane","click-event","piflow.dom/remove-element","piflow.ui/assumptions","vio-map","assumptions","s__41707","b__41709","i__41708","iter__41706","assumption","piflow.ui/local-pane","pane-id","local-pane-overlay","local-pane-underlay","pane-height","pane-width","piflow.ui/get-pane-id","curr","piflow.ui/move-element","piflow.ui/rescale-element","piflow.ui/resize-element","piflow.ui/new-pane-id","panes","max-panes","random-pane-id","cnt","loop-id","cljs.core/contains?","cljs.core.keyword","piflow.ui/update-map","m","clojure.string/includes?","piflow.ui/flux-pane-id","parent","s__41711","b__41713","i__41712","iter__41710","child","cljs.core/type","piflow.ui/update-flux","el-id","new-cont","match","flux-id","clojure.string.split","piflow.dom/reset-div","piflow.ui/ngpane-we","event","pane-contents","vec__41714","x","y","z","v41717","el__11611__auto__","hipo.interpreter/create","hipo.core/set-hiccup!","cljs.core.dissoc","cljs.core/last","piflow.ui/ngpane-w","piflow.ui/ngpane","partial-pane-id","piflow.ui/pane","piflow.ui/pane-eat-event","piflow.ui/scont-pane","piflow.ui/spane-close","x__5130__auto__","y__5131__auto__","piflow.ui/spane","piflow.ui/pane-click-close-backdrop","v41718","piflow.ui/uniq-colors","arbitrary-default","colors","cljs.core.distinct","s__41720","b__41722","i__41721","iter__41719","cljs.core.subvec","piflow.ui/button-attributes-id","other-style","click-fn","col-list","cljs.core/second","piflow.ui/button-attributes","piflow.ui/ring-chart","slices","orientation","ring-ends","total","cljs.core.apply","cljs.core/+","uniq-cols","degrees","s__41724","b__41726","i__41725","iter__41723","slice","js/parseInt","gradients","smallest","split-0","cljs.core.remove","cljs.core/nil?","s__41728","b__41730","i__41729","iter__41727","grad","Math/abs","gradient","s__41736","b__41738","i__41737","iter__41735","cljs.core.sort_by","s__41740","b__41742","i__41741","iter__41739","piflow.ui/pie-chart","s__41744","b__41746","i__41745","iter__41743","str-degrees","pre-sum","s__41748","b__41750","i__41749","iter__41747","s__41752","b__41754","i__41753","iter__41751","cljs.core/chunk-first"],"sourcesContent":["(ns piflow.ui\n  (:require\n   [piflow.dom :as adom]\n   ;[piflow.dada :as adada]\n   [piflow.util :as putil]\n   [clojure.edn :as cedn]\n   [hipo.core :as hipo]\n   [clojure.string :as cstr]))\n\n#_(defn display-img [img-ref]  ;; RO STR img ref in, DOM manip out ; img-ref \"mine.17\"\n    \"open a pane to display the image\"\n    (let [dmeta (:meta (first @adada/dada-stuff))\n          img-loc (cstr/split img-ref \".\")\n          img-key (first img-loc)\n          img-index (int (second img-loc))\n          img-list ((keyword img-key) (:IMG dmeta))\n          img (nth img-list img-index)]\n      (pane [:div\n             [:div (osty {}) \"Missing photo.  To upload one \" ;; unfinished\n              [:a \"click here\"]]\n             [:img\n              (conj\n               (osty {:z-index \"100\"\n                      :heigt \"auto\" ;; keep aspect ratio\n                      :width \"100%\"})\n               {:src (str \"assets/\" img)})]])))\n;; Color blind friendly color palletes\n;;    https://clauswilke.com/dataviz/color-pitfalls.html\n;;    https://personal.sron.nl/~pault/#sec:qualitative\n;;    https://thenode.biologists.com/data-visualization-with-flying-colors/research/\n(defonce Okabe-ito-colors   [\"#efc565\" ; orange\n                             \"#99d1f1\" ; blue\n                             \"#65c4aa\" ; green\n                             \"#f5ee8d\" ; light yellow\n                             \"#65aad0\" ; teal blue\n                             \"#e59e65\" ; orange\n                             \"#e0aeca\" ; pink\n                             \"#656565\" ; blackish\n                             ])\n(defonce Tol-bright-colors   [\"#f4a2ad\" ; pink\n                              \"#7ab784\" ; green\n                              \"#8eadcb\" ; navy\n                              \"#e0d68e\" ; gold\n                              \"#a2e0f4\" ; teal blue\n                              \"#cb84ad\" ; burgundy\n                              \"#d6d6d6\" ; grey\n                              ])\n(defonce Tol-muted-colors [\"#b7e0f4\" ; baby blue\n                           \"#8ecbc1\" ; teal\n                           \"#6fad84\" ; blue green\n                           \"#847ab7\" ; dark violet\n                           \"#eae0ad\" ; tan\n                           \"#c1c184\" ; gold\n                           \"#e0a2ad\" ; pink\n                           \"#b77a98\" ; burgundy\n                           \"#cb8ec1\" ; dark magenta\n                           \"#eaeaea\" ; light grey\n                           ])\n(defonce Tol-light-colors [\"#d6e084\" ; light green\n                           \"#cbcb65\" ; gold \n                           \"#adcbea\" ; blue\n                           \"#f4b7a2\" ; orange\n                           \"#f4eab7\" ; tan\n                           \"#ffcbd6\" ; pink\n                           \"#c1eaff\" ; baby blue\n                           \"#8ed6c1\" ; green\n                           \"#eaeaea\" ; light grey\n                           ])\n(defonce grey-scale-colors [\"#b3b3b3\" ; light grey\n                            \"#999999\"\n                            \"#7f7f7f\"\n                            \"#666666\"\n                            \"#4d4d4d\"\n                            \"#333333\"\n                            \"#1a1a1a\"\n                            \"#000000\" ; black\n                            ])\n(defonce rainbow-colors   [\"#df2422\" ; red \n                           \"#e47332\" ; orange\n                           \"#f4cd37\" ; yellow\n                           \"#a1df4a\" ; green\n                           \"#48d797\" ; green blue\n                           \"#32b7e0\" ; blue\n                           \"#4153d5\" ; violet\n                           \"#cb39df\" ; magenta\n                           ])\n(defonce pride-colors   [\"#fdafc5\" ; pink\n                         \"#75d4ea\" ; light blue\n                         \"#603814\" ; brown\n                         \"#ff1d26\" ; red\n                         \"#ffff00\" ; yellow\n                         \"#06bd01\" ; green\n                         \"#750087\" ; violet\n                         \"#010101\" ; black\n                         \"#fe931f\" ; orange\n                         \"#011898\" ; blue\n                         ])\n(defonce ae-ignores [\"#aaa\" \"#eee\"])\n(defonce ae-colors   [\"#aaa\"\n                      \"#aae\"\n                      \"#aea\"\n                      \"#aee\"\n                      \"#eaa\"\n                      \"#eae\"\n                      \"#eea\"\n                      \"#eee\"])\n\n(defn color-pallete []\n  ;ae-colors\n  ;Tol-light-colors\n  ;Tol-bright-colors\n  Okabe-ito-colors\n  ;Tol-muted-colors \n  ;grey-scale-colors\n  ;rainbow-colors\n  ;pride-colors\n  )\n(defn color-ignores []\n  ae-ignores)\n\n(defn random-color-w-ignore-list []  ;; returns a random color except values in ignore-list \n  (let [pallete (color-pallete)\n        ignore-list (color-ignores)\n        filtered-pallete (loop [f pallete\n                                i 0] (if (< i (count ignore-list)) (recur (filter #(not= (nth ignore-list i) %) f) (inc i)) f))]\n    (nth filtered-pallete (rand-int (count filtered-pallete)))))\n\n(defn a-e-random-color-w-o-aaa-eee [] ;; returns a random 3 character hash color, except #aaa & #eee, ie #eaa, #aea, etc\n  \"#aaa and #eee sometimes used in the ui so to distinguish spacers in spacerm this function omits those colors from the ae spectrum\"\n  (let [col (str \"#\"\n                 (if (= 0 (rand-int 2)) \"a\" \"e\")\n                 (if (= 0 (rand-int 2)) \"a\" \"e\")\n                 (if (= 0 (rand-int 2)) \"a\" \"e\"))\n        rand-i (rand-int 3)]\n    (cond\n      (= \"#eee\" col) (str \"#\" (subs \"eee\" 0 rand-i) \"a\" (subs \"eee\" rand-i))\n      (= \"#aaa\" col) (str \"#\" (subs \"aaa\" 0 rand-i) \"e\" (subs \"aaa\" rand-i))\n      :else col)))\n\n(defn a-e-random-color [] ;; returns a random 3 character hash color, ie #aaa, #aea, etc\n  (nth (color-pallete) (rand-int (count (color-pallete)))))\n(defn random-color [] (a-e-random-color))\n\n(defn O_a-e-random-color [] ;; returns a random 3 character hash color, ie #aaa, #aea, etc\n  (str \"#\"\n       (if (= 0 (rand-int 2)) \"a\" \"e\")\n       (if (= 0 (rand-int 2)) \"a\" \"e\")\n       (if (= 0 (rand-int 2)) \"a\" \"e\")))\n\n(defn H3opac [hex-color opacity] ;; 4 character hex color string #123; STR\"rgb(R,G,B,opacity)\" out\n  (let [rgb (putil/color-unhex hex-color)]\n    (str \"rgb(\" (cstr/join \",\" rgb) \",\" (str opacity) \")\")))\n;; identical function, but naming convention of name-order<->param-order\n(defn opacH3 [opacity hex-color] ;; 4 character hex color string #123; STR\"rgb(R,G,B,opacity)\" out\n  (let [rgb (putil/color-unhex hex-color)]\n    (str \"rgb(\" (cstr/join \",\" rgb) \",\" (str opacity) \")\")))\n\n(def pane_top_left {:width \"20em\"\n                    :height \"20em\"\n                    :left \"-2em\"\n                    :z-index \"-2\"})\n\n(def title {:left \"3em\"\n            :top \"3em\"\n            :width \"27em\"\n            :height \"1.2em\"})\n\n(def title_box {:top \"3em\"\n                :left \"3em\"\n                :height \"2em\"\n                :width \"50em\"\n                :background-color \"#FFF\"})\n\n(def link_home {:top \"1.5em\"\n                :left \"1.4em\"\n                :height \"1.3em\"\n                :width \"50em\"\n                :color \"black\"\n                :background-color \"transparent\"\n                :text-decoration  \"none\"\n                ;:text-weight  \"bold\"\n                :font-size \"2em\"})\n\n(def form_email {:top \"4em\"\n                 :left \"2em\"\n                 :height \"1.4em\"\n                 :width \"14em\"})\n\n(def form_password {:top \"6.2em\"\n                    :left \"2em\"\n                    :height \"1.4em\"\n                    :width \"14em\"})\n\n(def form_selType {:top \"5em\"\n                   :height \"1em\"\n                   :width \"9em\"})\n\n(def form_tos {:top \"7.4em\"\n               :left \"-5em\"\n               :height \"1.2em\"\n               :width \"25em\"})\n\n(def tos_chk {:height \"1.2em\"\n              :width \"2em\"})\n\n(def tos_agree {:left \"2em\"\n                :height \"1.2em\"\n                :width \"25em\"\n                :font-size \"10pt\"})\n\n(def a_tos {:position \"relative!important\"\n            :font-size \"10pt\"\n            :width \"25em\"})\n\n(def form_submit_button {:top \"9em\"\n                         :left \"6em\"\n                         :height \"2em\"\n                         :width \"6em\"})\n\n(def form_signup_button {:top \"11em\"\n                         :height \"2em\"\n                         :width \"18em\"\n                         :border \"none\"\n                         :background-color \"transparent\"\n                         :border-bottom  \"1px solid black\"})\n\n(def cont {:top \"8em\"\n           :left \"11em\"\n           :height \"17em\"\n           :width \"17em\"})\n(def selectType {:left \"3em\"\n                 :top \"3em\"})\n(def footer_ {:top \"34em\"\n              :width \"20em\"})\n(def r* {:position \"relative\"\n         :margin \"0\"\n         :padding \"0\"})\n(def s* {:position \"absolute\"\n         :margin \"0\"\n         :padding \"0\"})\n\n(def f* {:float :left})\n(defn hsty [i] {:style (conj s* i)})  ;; hiccup style map\n\n;; app.core=> (cstr/join (for [[k v] {:c 1, :d 2, :e 3}] (str (name k) \":\" (str v) \";\"))) => \"c:1;d:2;e:3;\"\n(defn sty [i] {:style ;; hipo style str\n               (cstr/join (for [[k v] i]\n                            (str (name k) \":\" (str (name v)) \";\")))})\n(defn rsty [i] {:style\n                (cstr/join (for [[k v] (conj r* i)]\n                             (str (name k) \":\" (str (name v)) \";\")))})\n(defn osty [i] {:style\n                (cstr/join (for [[k v] (conj s* i)]\n                             (str (name k) \":\" (str (name v)) \";\")))})\n(defn fsty\n  ([]\n   {:style \"float:left;\"})\n  ([i]\n   {:style\n    (cstr/join (for [[k v] (conj f* i)]\n                 (str (name k) \":\" (str (name v)) \";\")))}))\n\n(defn spacern [] ;; undo the (spacerm ) affects\n  (doall (for [spacer (.getElementsByClassName js/document \"spacer\")]\n           (putil/invoke \"piflow.dom/set-el-style-attr\" spacer :background-color :transparent))))\n\n(defn spacerm [] ;; DEV, colors all spacer elements\n  (doall (for [spacer (.getElementsByClassName js/document \"spacer\")]\n           (putil/invoke \"piflow.dom/set-el-style-attr\" spacer :background-color (random-color-w-ignore-list)))))\n\n(defn spacer-dev [color w h] ;; \"\"width, \"\"height in,\"\"|:KW in; hiccup out, -dev due to being visible\n  [:div (fsty {:width w :height h :background-color color})])\n(defn spacer [w h] ;; \"\"width, \"\"height in; hiccup out\n  [:div#spacer.spacer (fsty {:width w :height h})])\n(defn spacer-fr [w h] ;; \"\"width, \"\"height in; hiccup out\n  [:div#spacer.spacer (fsty {:width w :height h :float :right})])\n\n(defn change-bc [e] ;; click-event in; DOM manip , change background color to a random #aaa-#eee value\n  (let [el (.-target e)\n        el-style (adom/get-el-attr el \"style\")]\n    (adom/set-el-attr el \"style\" (adom/sty-map>str (assoc (adom/sty-str>map el-style) :background-color (random-color))))))\n\n;(adom/set-el-attr js/document.body \"style\" (str \"background-color:#eea;margin:0;text-transform:lowercase;\") ;; tan startup\n(adom/set-el-attr js/document.body \"style\" (str \"background-color:\" (random-color) \";margin:0;text-transform:lowercase;\"))  ;; rando startup\n(defn body-bc [hex-color]\n  (let [pane js/document.body\n        pane-style (adom/get-el-attr pane \"style\")]\n    (if pane-style\n      (adom/set-el-attr pane \"style\" (adom/sty-map>str (assoc (adom/sty-str>map pane-style) :background-color hex-color)))\n      (adom/set-el-attr pane \"style\" (adom/sty-map>str {:background-color hex-color :margin \"0\"})))))\n\n(defn rotate-el [rotation-degrees style-map]\n  (assoc style-map\n         :-webkit-transform (str \"rotate(\" rotation-degrees \"deg);\")\n         :-moz-transform (str \"rotate(\" rotation-degrees \"deg);\")\n         :-o-transform (str \"rotate(\" rotation-degrees \"deg);\")\n         :transform (str \"rotate(\" rotation-degrees \"deg);\")))\n\n(defn stripes []\n  (let [cols (color-pallete)]\n    [:div (osty pane_top_left)\n     [:div (conj (osty (rotate-el \"-60\" {:left \"-16em\" :top \"0em\" :width \"31em\" :height \"17em\" :background-color \"#FFF\"})) {:on-click (fn [e] (putil/invoke \"piflow.ui/body-bc\" \"#FFF\"))})]\n     [:div (osty {:left \"-19em\"})\n      [:div (conj (osty (rotate-el \"-60\" {:left \"0em\" :top \"16em\" :width \"41em\" :height \"1em\" :background-color (nth cols 0)})) {:on-click (fn [e] (putil/invoke \"piflow.ui/body-bc\" (nth cols 0)))})]\n      [:div (conj (osty (rotate-el \"-60\" {:left \"1em\" :top \"16em\" :width \"41em\" :height \"1em\" :background-color (nth cols 1)})) {:on-click (fn [e] (putil/invoke \"piflow.ui/body-bc\" (nth cols 1)))})]\n      [:div (conj (osty (rotate-el \"-60\" {:left \"2em\" :top \"16em\" :width \"41em\" :height \"1em\" :background-color (nth cols 2)})) {:on-click (fn [e] (putil/invoke \"piflow.ui/body-bc\" (nth cols 2)))})]\n      [:div (conj (osty (rotate-el \"-60\" {:left \"3em\" :top \"16em\" :width \"41em\" :height \"1em\" :background-color (nth cols 3)})) {:on-click (fn [e] (putil/invoke \"piflow.ui/body-bc\" (nth cols 3)))})]\n      [:div (conj (osty (rotate-el \"-60\" {:left \"4em\" :top \"16em\" :width \"41em\" :height \"1em\" :background-color (nth cols 4)})) {:on-click (fn [e] (putil/invoke \"piflow.ui/body-bc\" (nth cols 4)))})]\n      [:div (conj (osty (rotate-el \"-60\" {:left \"5em\" :top \"16em\" :width \"41em\" :height \"1em\" :background-color (nth cols 5)})) {:on-click (fn [e] (putil/invoke \"piflow.ui/body-bc\" (nth cols 5)))})]\n      [:div (conj (osty (rotate-el \"-60\" {:left \"6em\" :top \"16em\" :width \"41em\" :height \"1em\" :background-color (nth cols 6)})) {:on-click (fn [e] (putil/invoke \"piflow.ui/body-bc\" (nth cols 6)))})]\n      [:div (conj (osty (rotate-el \"-60\" {:left \"7em\" :top \"16em\" :width \"41em\" :height \"1em\" :background-color (nth cols 7)})) {:on-click (fn [e] (putil/invoke \"piflow.ui/body-bc\" (nth cols 7)))})]]]))\n\n(defn choose-utf8 [purpose]\n  (let [close-list [\"X\" \"\u2297\"] ;; rejected: \u2573\n        move-list  [\"\u2608\" \"\u219d\" \"\u21ab\" \"\u21ac\" \"\u21af\"]; \"\u22b6\"]\n        resize-list [\"\u21f1\" \"\u21f2\" \"\u2798\"]\n        rescale-list [\"\u21c5\" \"\u21c4\"]\n        texture-list [\"\u2591\" \"\u2592\" \"\u2593\"]\n        misc-list [\"\u262e\" \"\u2686\" \"\u2687\" \"\u262f\" \"\u2609\" \"\u263a\" \"\u2764\" \"\u221e\" \"\u2234\" \"\u223f\"]\n        config-list [\"\u2699\" \"\u2609\" \"\u2692\" \"\u2695\" \"\u2702\"]\n        help-list [\"?\" \"\u00bf\"]\n        char-list (cond\n                    (= purpose \"close\") close-list\n                    (= purpose \"move\") move-list\n                    (= purpose \"resize\") resize-list\n                    (= purpose \"rescale\") rescale-list\n                    (= purpose \"help\") help-list\n                    (= purpose \"config\") config-list\n                    :else (concat move-list resize-list rescale-list close-list misc-list texture-list config-list help-list))]\n    (nth char-list (rand-int (count char-list)))))\n\n(defn list-col [i]\n  (if (= 0 (mod i 2))\n    \"#eee\"\n    :white))\n\n(defn div-inp [w h s]\n  (let [str-em \"0.17em\"] ;; thin angle cols\n        ;str-em (str (float (/ (js/parseFloat h) 3)) \"em\")] ;; thick angle cols \n    [:div (fsty)\n     [:div (fsty {:padding-top str-em :height h :width w ;:text-shadow \"1.5px 0px 1px #FFF\"\n;                :padding-top \"0.17em\" \n                  :position :relative :z-index \"200\"})\n      [:div (conj\n             {:id (str (subs s 5) \"_display_title\")}\n             ;(sty {:color :black :text-decoration :none}))\n             (sty {:text-decoration :none}))\n       s]]\n     (spacer \".2em\" \"1em\")]))\n\n(defn div-inp-a [w h s href]\n  (let [str-em \"0.17em\"] ;; thin angle cols\n    [:div (fsty)\n     [:div (fsty {:padding-top str-em :height h :width w\n                  :position :relative :z-index \"200\"})\n      ;[:a (conj (sty {:color :black :text-decoration :none})\n      [:a (conj (sty {:text-decoration :none})\n                {:target \"_blank\"\n                 :href href}) s]]\n     (spacer \".2em\" \"1em\")]))\n(defonce click-animation-transition \"transform 0.628s ease-out\")\n;(defonce click-animation-transition \"transform 0.17s ease-out\")\n\n(defn pane-div-inp-omd [s title on-mouse-down]\n  [:div (fsty)\n   [:div (fsty {;:text-shadow \"1.5px 0px 1px #FFF\"\n                :font-size \"1.5em\" :position :relative :z-index \"100\"})\n    [:div (conj (sty {:transition click-animation-transition\n                      ;:color :black :text-decoration :none})\n                      :text-decoration :none})\n                {:onmousedown on-mouse-down\n                 :onmouseup (fn [e]\n                              (when (exists? (.-global_close_fn (.-core (.-piflow js/window))))\n                                (putil/invoke \"piflow.core/global-mouseup-fn\" e)))\n                 :title title}) s]]\n   (spacer \"1em\" \"1em\")])\n\n(defn pane-div-inp-o [s title on-click]\n  [:div (fsty)\n   [:div (fsty {;:text-shadow \"1.5px 0px 1px #FFF\"\n                :font-size \"1.5em\" :padding-top \"0.1em\" :position :relative :z-index \"100\"})\n    [:div (conj (sty {:transition click-animation-transition\n                      ;:color :black :text-decoration :none})\n                      :text-decoration :none})\n                {:onmousedown (fn [e] (.press_down js/window e))\n                 :on-click on-click\n                 :title title}) s]]\n   (spacer \"1em\" \"1em\")])\n\n(defn div-inp-o [w h s title on-click]\n  [:div (fsty)\n   [:div (fsty {:height h :width w :padding-top \"0.17em\" :position :relative :z-index \"200\"})\n    [:div (conj (sty {:transition click-animation-transition\n                      ;:color :black :text-decoration :none})\n                      :text-decoration :none})\n                {:onmousedown (fn [e] (.press_down js/window e))\n                 :on-click on-click\n                 :title title}) s]]\n   (spacer \"0.2em\" \"1em\")])\n\n(defn cont-admin []\n  (let [font-size \"1.5em\"]\n    [:div#admin (fsty {:position :absolute\n                       :z-index \"100\"\n                       :font-size font-size})\n     (spacer \"0.5em\" font-size)\n     (div-inp-o font-size font-size (choose-utf8 \"close\") \"Log Out\" (fn [e]\n                                                                      (putil/invoke \"piflow.ui/body-bc\" (random-color))))\n     (div-inp-o font-size font-size (choose-utf8 \"config\") \"Config\" (fn [e]\n                                                                      (putil/invoke \"piflow.ui/body-bc\" (random-color))))\n     (div-inp-o font-size font-size (choose-utf8 \"help\") \"Help\" (fn [e]\n                                                                  (putil/invoke \"piflow.ui/body-bc\" (random-color))))]))\n\n(defonce nav-title-list (atom [])) ;; will get (reset! every time a link is pressed\n(defn cont-nav-title []  ;; atom in, hiccup out ; nav-title-list [{:link \"PROJ.ns/fn\" :titlte \"\"},..]\n  [:div (fsty {:z-index \"100\"})\n   (spacer \"100%\"  \"4em\")\n   (spacer \"1.5em\" \"3em\")\n   [:div\n    (fsty {:border-radius \"0px 10px 10px 0px\"\n           :background-color (if (< 1 (count @nav-title-list))\n                               :white        ;; home/*\n                               :transparent) ;; home/\n           :padding-top \"0.3em\"\n           :padding-bottom \"0.3em\"\n           :text-align :center})\n    (for [title-map @nav-title-list]\n      [:a (conj (fsty {:font-size \"17pt\"\n                       :padding-top \"0.3em\"\n                       :padding-bottom \"0.3em\"\n                       :text-align :center})\n                {:id (str \"nav-\" (putil/index-of title-map @nav-title-list))}\n                {:on-click (fn [e] (adom/update-flux (putil/invoke (:link title-map))))})\n       (if (< 1 (count @nav-title-list))\n         (str (:title title-map) \"/\")\n         (str (:title title-map)))])]])\n\n(defn cont-title [title]\n  [:div (fsty)\n   [:div (fsty)]\n   [:a (fsty) title]])\n\n(defn footer [msg]\n  [:footer (osty footer_)\n   [:p (osty s*) msg]])\n\n(defn draw-em-ruler [tag n]\n  (into [:div (osty {:top \"-2em\"})]\n        (for [i (range n)\n              j (range 10)]\n          (if (zero? j)\n            [tag (conj (osty {:color :white :background-color :black :left (str (* i 10) \"em\") :z-index \"100\"}) {:id (str \"c\" i j)}) (str i)]\n            [tag (conj (osty {:color :white :background-color :red :left (str (+ j (* i 10)) \"em\") :z-index \"100\"}) {:id (str \"t\" i j)}) (str j)]))))\n\n(defn remove-pane [click-event]\n  (adom/remove-element \"pane\"))\n\n(defn assumptions [vio-map]\n  (let [assumptions (:assumptions vio-map)]\n    [:div (fsty {:text-stroke \"1px solid black\" :text-size \"13pt\"})\n     (spacer \"100%\" \"0.2em\")\n     (spacer \"2em\" \"8em\")\n     [:div (fsty {:border-radius \"10px\"\n                  :width \"38em\"\n                  ;:text-shadow \"1px 1px 2px #FFF\"\n                  :height \"8em\"\n                  :overflow :auto})\n      [:div (fsty {:width \"100%\" :height \"1em\" :text-align :center})\n       \"These calculations are based on the following assumptions:\"]\n      [:div (fsty)\n       (into [:ul] (for [assumption assumptions]\n                     [:li assumption]))]]\n     (spacer \"100%\" \"0.314em\")\n     [:div (fsty {:width \"100%\" :height \"1em\" :text-align :center :font-size \"14pt\" :color :white\n                  ;:text-shadow \"1px 2px 5px black\"\n                  :font-weight \"bolder\"}) \"Click here to remove assumptions\"]\n     (spacer \"100%\" \"0.2em\")]))\n\n(defn local-pane [pane-id local-pane-overlay local-pane-underlay]\n  \"{:top } on #localladom modified due: \n        z-index requires positioning\n        relative position avoids overlaps\n        so to use z-index with relative objects you need to force overlaps\"\n  (let [pane-height 12 ;;em\n        pane-width 42] ;; em\n    [:div (fsty {:width \"100%\"})\n     [:div (fsty {:height (str pane-height \"em\")\n                  :width (str pane-width \"em\") :position :relative})\n      [:div (conj {:id pane-id}\n                  (fsty {:left \"2.3em\"\n                         :top \"1.7em\"\n                         :z-index \"100\"\n                         :box-shadow \"0px 8px 13px #aaa\"\n                         :border-radius \"10px 10px 10px 10px\"\n                         :border \"1px solid white\"\n                         :background-color \"rgb(255,0,0,0.628)\"\n                         :height (str pane-height \"em\")\n                         :width (str pane-width \"em\") :position :relative}))\n       (spacer \"100%\" \"0.314em\")\n       (spacer \"0.314em\" \"1.2em\")\n      ;; close\n       [:div (conj (fsty {:width \"1.3em\" :height \"1.3em\"\n;                          :color \"#eae\" :font-weight \"bolder\" :text-shadow \"1px 1px black\"\n                          :font-size \"1.2em\"\n                          :text-align \"center\"})\n                   {:on-click (fn [e]\n                                (putil/invoke \"piflow.dom/remove-element\" pane-id))}) \"X\"]\n       [:div (fsty {:width \"27em\" :height \"1em\" :text-align :center :font-size \"14pt\" :color :white\n                    ;:text-shadow \"1px 2px 5px black\"\n                    :font-weight \"bolder\"}) \"Assumptions\"]\n       (spacer \"100%\" \"0em\")\n       [:div (fsty) ;; odelay\n        local-pane-overlay]]]\n\n     [:div#localladom (fsty {:z-index \"10\" :top (str \"-\" pane-height \"em\") :height \"100%\" :width \"100%\" :position :relative})\n      local-pane-underlay]])) ;; andale \n\n(defn get-pane-id [e]\n  (loop [curr (.-target e)]\n    (cond\n      (nil? curr) nil\n      (= \"pane_\" (subs (.-id curr) 0 5)) (.-id curr)\n      ;(cstr/includes? (.-id curr) \"pane\") (.-id curr)\n      (= curr js/document) nil\n      :else (recur (.-parentNode curr)))))\n\n(defn move-element [click-event] ;; JS event in, call out to js function in index.htm to add the event\n  (.addMyMoveEvent js/window click-event))\n\n(defn rescale-element [click-event] ;; JS event in, call out to js function in index.htm to add the event\n  (.addMyRescaleEvent js/window click-event))\n\n(defn resize-element [click-event] ;; JS event in, call out to js function in index.htm to add the event\n  (.addMyResizeEvent js/window click-event))\n\n(defn new-pane-id [s]\n  (let [panes (.-GLOB_flow_graph js/window)\n        max-panes 1717 ;; 1717: arbitrary large max number of panes\n        random-pane-id (loop [cnt 0\n                              loop-id (str \"pane_\" s \"_\" (rand-int max-panes))]\n                         (if\n                          (< cnt max-panes)\n                           (if\n                            (contains? panes (keyword loop-id))\n                             (let []\n                               (recur (inc cnt)\n                                      (str \"pane_\" s \"_\" (rand-int max-panes))))\n                             loop-id)\n                           (str \"pane_\" s \"_MAX_PANES_REACHED\")))] ;; ensure uniq id\n    random-pane-id))\n\n(defn update-map [pane-id m]\n  (if (contains? m :id)\n    (if (cstr/includes? (:id m) \"flux\")\n      (assoc m :id (str (:id m) \"_\" pane-id))\n      m)\n    m))\n\n(defn flux-pane-id [pane-id parent]\n  (into [] (for [child parent]\n             (cond\n               (= (type []) (type child)) (flux-pane-id pane-id child)\n               (= (type {}) (type child)) (update-map pane-id child)\n               :else child))))\n\n(defn update-flux [click-event el-id new-cont] ;; hiccup in; DOM manip, flux divs are styleless and tail position\n  (let [match (.get-match-id js/window click-event \"pane\")\n        flux-id (if (= js/document match)\n                  (str \"flux_\" (first (cstr/split el-id #\" \")))\n                  (str \"flux_\" (first (cstr/split el-id #\" \")) \"_\" match))]\n    (adom/reset-div flux-id new-cont)))\n\n(defn ngpane-we [event pane-id pane-contents parent]\n  (let [font-size \"2em\"\n        [x y z] [(.-pageX event) (.-pageY event) 207]]\n    (.appendChild parent ;;(.getElementById js/document \"flux\") ;;js/document.body\n                  (hipo/create\n                   [:div (conj (fsty {:height \"15em\" :width \"30em\"\n                                      :position :absolute\n                                      :box-shadow \"0px 8px 13px #aaa\"\n                                      :z-index \"207\"\n                                      :background-color (putil/invoke \"piflow.ui/random-color\")\n                                      :top (str y \"px\")\n                                      :left (str x \"px\")})\n                               {:ondblclick (fn [e] (.into_view js/window (.get_match_id js/window e \"pane\")))}\n                               {:onmousedown (fn [e]\n                                               (.to_top js/window (.get_match_id js/window e \"pane\")))\n                                :id pane-id})\n                    [:div (conj\n                           (fsty {:-webkit-user-select :none; /* Safari */        \n                                  :-moz-user-select :none; /* Firefox */\n                                  :-ms-user-select :none; /* IE10+/Edge */\n                                  :user-select :none; /* Standard */\n                                  })\n                           {:id (str (subs pane-id 5) \"_title_bar\")})\n                     (spacer \"1em\" \"1em\")\n                     (pane-div-inp-o (choose-utf8 \"close\") \"Close\"\n                                     (fn [e]\n                                       (when (exists? (.-global_close_fn (.-core (.-piflow js/window))))\n                                         (putil/invoke \"piflow.core/global-close-fn\" e))\n                                       (putil/invoke \"window.press_down\" e)\n                                       (aset js/window \"GLOB_flow_graph\" (dissoc (.-GLOB_flow_graph js/window) (keyword pane-id)))\n                                       (putil/invoke \"piflow.dom/remove-element\" pane-id)))\n                     (pane-div-inp-omd (choose-utf8 \"move\") \"Move\" (fn [e]\n                                                                     (when (exists? (.-global_move_fn (.-core (.-piflow js/window))))\n                                                                       (putil/invoke \"piflow.core/global-move-fn\" e))\n                                                                     (.press_down js/window e)\n                                                                     (putil/invoke \"piflow.ui/move-element\" e)))\n                     (pane-div-inp-omd (choose-utf8 \"resize\") \"Resize\" (fn [e]\n                                                                         (when (exists? (.-global_resize_fn (.-core (.-piflow js/window))))\n                                                                           (putil/invoke \"piflow.core/global-move-fn\" e))\n                                                                           ;;(putil/invoke \"piflow.core/global-resize-fn\" e))\n                                                                         (putil/invoke \"window.press_down\" e)\n                                                                         (putil/invoke \"piflow.ui/resize-element\" e)))\n                     (pane-div-inp-omd (choose-utf8 \"rescale\") \"Rescale\" (fn [e]\n                                                                           (when (exists? (.-global_rescale_fn (.-core (.-piflow js/window))))\n                                                                             (putil/invoke \"piflow.core/global-move-fn\" e))\n                                                                           ;;(putil/invoke \"piflow.core/global-rescale-fn\" e))\n                                                                           (putil/invoke \"window.press_down\" e)\n                                                                           (putil/invoke \"piflow.ui/rescale-element\" e)))\n                     (div-inp \"\" font-size pane-id) ;; (subs _ 5):\"pane-hazzah\"=>\"hazzah\"\n                     (spacer \"4em\" \"1em\")\n                     (div-inp \"\" font-size (last (cstr/split pane-id \"_\")))]\n                    ;(spacer \"100%\" \"0em\")\n                    (spacer \"0.5em\" \"2em\")\n                    [:div (conj (fsty {:background-color :white\n                                       :box-shadow \"0px 8px 13px #aaa\"\n                                       :height \"95%\"\n                                       :width \"98%\"\n                                       :overflow :auto}))\n                     (flux-pane-id pane-id pane-contents)]]))\n    (.to_top js/window pane-id)))\n\n(defn ngpane-w [pane-id pane-contents parent]\n  (ngpane-we nil pane-id pane-contents parent))\n\n(defn ngpane [partial-pane-id pane-contents]\n  (let [pane-id (new-pane-id partial-pane-id)]\n    (ngpane-w pane-id pane-contents js/document.body)))\n\n(defn pane\n  [pane-contents]\n  (let [pane-id (new-pane-id \"\")]\n    (ngpane pane-id pane-contents)))\n\n(defn pane-eat-event\n  [click-event pane-id pane-contents]\n  (ngpane pane-id pane-contents))\n\n(def scont-pane\n  {:width (str (.-innerWidth js/window) \"px\")\n   :height (str (.-innerHeight js/window) \"px\")\n   :z-index \"298\"})\n\n(def spane-close\n  {:background-color \"rgba(128, 128, 128, 0.628)\"\n   :width (str (max\n                (.-clientWidth js/document) ;; ??\n                (.-innerWidth js/window)\n                (.-outerWidth js/window)) \"px\")\n   :height  (str (.-outerHeight js/window) \"px\")\n   :z-index \"299\"})\n\n(def spane\n  {:z-index \"300\"\n   :width \"60em\"\n   :height \"20em\"\n   :top \"10em\"\n   :left \"10em\"\n   :background-color :white\n   :overflow :auto})\n\n(defn pane-click-close-backdrop [pane-contents]\n  (.appendChild js/document.body\n                (hipo/create\n                 [:div#pane.pane (osty scont-pane) ;; the pane\n                  [:div (conj (osty spane-close) ;; page overlay to remove pane\n                              {:on-click (fn [e] (putil/invoke \"piflow.ui/remove-pane\" e))})]\n                  [:div (osty spane) pane-contents]])))\n\n(defn uniq-colors [n] ;; INT number of uniq colors\n  (let [arbitrary-default [\"#aaa\" \"#aae\" \"#aea\" \"#aee\" \"#eaa\" \"#eae\" \"#eea\" \"#eee\"] ;; max 8\n        ;colors (distinct (into [] (for [i (range (* 3 n))] (random-color))))] ;; avoid doubling up on \n        colors (into [] (distinct (into [] (for [i (range (* 3 n))] (random-color)))))] ;; avoid doubling up on \n    (if (> n (count colors))\n      (subvec arbitrary-default 0 n)\n      (subvec colors 0 n))))\n\n(defn button-attributes-id [other-style click-fn el-id new-cont] ;;MAP{style-keys vals}, STR\"PROJ.NS/fn\", hiccup in, hiccup out\n  ; incoming styles overwrite defaults\n  (let [col-list (uniq-colors 3)]\n    (conj\n     {:id \"button\"\n      :onmousedown (fn [e] (.press_down js/window e))\n      :on-click (fn [e]\n                  (cond\n                    (.-ctrlKey e) (putil/invoke \"piflow.ui/ngpane\" el-id new-cont)\n                    :else (putil/invoke click-fn e el-id new-cont)))\n      :ondblclick (fn [e] (putil/invoke \"piflow.ui/ngpane\" el-id new-cont))}\n     (fsty (conj {:text-align :center\n                  :user-select :none\n                  :-moz-user-select :none\n                  :background-color :white\n                  :transition click-animation-transition\n                  :border  \"1px solid #aaa\"\n                  :padding \"0.3em\"\n                  :box-shadow (str  \"0  4px 0 -1px \" (first col-list)\n                                    \",0  8px 0 -2px \" (second col-list)\n                                    \",0 16px 0 -3px \" (nth col-list 2))}\n                 other-style)))))\n\n(defn button-attributes [other-style click-fn new-cont] ;;MAP{style-keys vals}, STR\"PROJ.NS/fn\", hiccup in, hiccup out\n  ; incoming styles overwrite defaults\n  (let [col-list (uniq-colors 3)]\n    (conj\n     {:onmousedown (fn [e] (.press_down js/window e))\n      :id \"button\"\n      :on-click (fn [e] (putil/invoke click-fn new-cont))}\n     (fsty (conj {:text-align :center\n                  :background-color :white\n                  :transition click-animation-transition\n                  :border  \"1px solid #aaa\"\n                  :padding \"0.3em\"\n                  :box-shadow (str  \"0  4px 0 -1px \" (first col-list)\n                                    \",0  8px 0 -2px \" (second col-list)\n                                    \",0 16px 0 -3px \" (nth col-list 2))}\n                 other-style)))))\n\n(defn ring-chart [slices orientation ring-ends] ;; [INT INT] slices length 2, INT rotating the ring, INT angle between ring ends in; hiccup out\n  (let [total (apply + slices)\n        uniq-cols (uniq-colors (count slices))\n        degrees (into [] (for [slice slices]\n                           (js/parseInt (* (- 360 ring-ends) (/ slice total))))) ;; normalise values to 300 degrees -60 for the ring ends\n        gradients [[\"white\" ;; ring cutaway\n                    (js/parseInt (mod (- orientation (/ ring-ends 2)) 360))\n                    (js/parseInt (mod (+ orientation (/ ring-ends 2)) 360))]\n\n                   [(first uniq-cols)\n                    (js/parseInt (mod (+ orientation (/ ring-ends 2)) 360))\n                    (js/parseInt (mod (+ (first degrees) (+ orientation (/ ring-ends 2))) 360))]\n\n                   [(second uniq-cols)\n                    (js/parseInt (mod (+ (first degrees) (+ orientation (/ ring-ends 2))) 360))\n                    (js/parseInt (mod (+ (second degrees) (+ (first degrees) (+ orientation (/ ring-ends 2)))) 360))]]\n        smallest (loop [i 0\n                        smallest [\"\",361,0]] ;; 361: arbitrary value greater than 360\n                   (if (< i (count gradients))\n                     (let []\n                       (if (< (second (nth gradients i)) (second smallest))\n                         (recur (inc i)\n                                (nth gradients i))\n                         (recur (inc i)\n                                smallest)))\n                     smallest))\n        split-0 (first (remove nil? (for [grad gradients] (when (> 1.5 (Math/abs (- (nth grad 2) (second smallest)))) grad))))\n        gradient (str\n                  (first split-0) \" \"                                                 ;; split's color\n                  \"0deg \"                                                             ;; split starts at 0\n                  (nth split-0 2) \"deg,\"                                              ;; partial\n                  (cstr/join \" \" (remove nil? (for [grad (sort-by second gradients)]\n                                                (when (not (= grad split-0))\n                                                  (str (first grad) \" \"                 ;; color\n                                                       (second grad) \"deg \"             ;; start\n                                                       (nth grad 2) \"deg,\")))))         ;; end\n                  (str (first split-0) \" \"                                            ;; split's color again\n                       (second split-0) \"deg \"                                        ;; partial\n                       \"360deg\"))]                                                    ;; split ends at 0 (360deg)\n    [:div (fsty)\n     [:div (fsty {:width \"14em\"\n                  :height \"14em\"\n                  :border-radius \"50%\"\n                  :background-image (str \"conic-gradient(\" gradient \")\")})]\n     (spacer \"3.14em\" \"13em\")\n     (into [:div (fsty)]\n           (for [i (range (count slices))]\n             [:div (fsty {;:width \"1em\"\n                          :width \"70%\"})\n              (spacer \"100%\" \"1em\")\n              [:div (fsty {:height \"1em\"\n                           :width \"1em\"\n                           :border-radius \"50%\"\n                           :background-color (nth uniq-cols i)})]\n              (spacer \"0.7em\" \"1em\")\n              [:div (fsty)\n               (str (nth slices i))]]))\n     [:div (sty {:position :relative :z-index \"200\" :top \"2em\" :left \"2em\" :background-color :white\n                 :width \"10em\"\n                 :height \"10em\" :border-radius \"50%\"})]]))\n\n;; ex. :background-image \"conic-gradient(#eea 0deg 251deg,#aae 251deg 323deg,#eae 323deg 359deg)\"\n(defn pie-chart [slices]\n  (let [total (apply + slices)\n        degrees (into [] (for [slice slices]\n                           (js/parseInt (* 360 (/ slice total))))) ;; normalise values to 360 degrees\n        str-degrees (loop [str-degrees []\n                           i 0]\n                      (if (< i (count degrees))\n                        (if (= 0 i)\n                          (recur\n                           (conj str-degrees (str \"0deg \" (nth degrees i) \"deg\"))\n                           (inc i))\n                          (let [pre-sum (apply + (subvec degrees 0 i))]\n                            (recur\n                             (conj str-degrees (str pre-sum \"deg \" (+ pre-sum (nth degrees i)) \"deg\"))\n                             (inc i))))\n                        str-degrees))\n        uniq-cols (uniq-colors (count slices))\n        gradient (cstr/join \",\"\n                            (for [i (range (count str-degrees))]\n                              (str (nth uniq-cols i) \" \" (nth str-degrees i))))]\n    [:div (fsty)\n     [:div (fsty {:width \"13em\"\n                  :height \"13em\"\n                  :border-radius \"50%\"\n                  :background-image (str \"conic-gradient(\" gradient \")\")})]\n     (spacer \"3.14em\" \"13em\")\n     (into [:div (fsty)]\n           (for [i (range (count degrees))]\n             [:div (fsty {;:width \"1em\"\n                          :width \"70%\"})\n              (spacer \"100%\" \"1em\")\n              [:div (fsty {:height \"1em\"\n                           :width \"1em\"\n                           :border-radius \"50%\"\n                           :background-color (nth uniq-cols i)})]\n              (spacer \"0.7em\" \"1em\")\n              [:div (fsty)\n               (str (nth degrees i))]]))]))\n\n;; DISCARD\n\n;:store (:box-shadow el-stylem)\n;:background-origin (:box-shadow el-stylem)\n;:\n;:box-shadow \"\"\n  ;(adom/set-el-attr el \"style\" (adom/sty-map>str (conj el-stylem {:y (str (+ (.-top position) 15))\n  ;                                                           :x (str (.-left position))\n  ;                                                           :position :relative})))\n\n;; (js/console.log \"UP\" (:left position)) ;; => nil\n;; (js/console.log \"UP\" (:x el)) ;; => nil\n;; (js/console.log \"UP\" (:top el-stylem)) ;; => nil\n\n;(aget (.getComputedStyle js/window js/document.body) \"width\") ;; SUCC\n  ;(.-width (.-getBoundingClientRect (.getElementById js/document \"flux\"))) ;; FAIL !?!\n\n;(defn remove-pane [click-event]\n;  (js/console.log click-event)\n;  (js/console.log (.-target click-event))\n;  (adom/remove-element (.-target click-event)))\n\n  ;:width (str (.-innerWidth js/window) \"px\")\n   ;:height  (str (.-innerHeight js/window) \"px\")\n;;{:height \"1em\"} \"piflow.employee/update-flux-employee\" (explainer/inline-block-elements)))}\n\n;(js/console.log \"TST0\" (.-clientWidth js/document))\n;(js/console.log \"TST1\" (.-offsetWidth js/document))\n\n    ;(adom/set-el-attr el \"style\" (adom/sty-map>str (assoc el-stylem :box-shadow (:store el-stylem))))\n    ;(adom/set-el-attr el \"style\" (adom/sty-map>str (assoc el-stylem :box-shadow (:background-origin el-stylem))))\n  ;(adom/set-el-attr el \"style\" (adom/sty-map>str (assoc el-stylem :box-shadow \"0 5px 0 -1px #aae,0 10px 0 -2px #eaa,0 15px 0 -3px #aee\")))\n  ;(js/console.log \"UP\" position) ;; => ? UP #object[DOMRect [object DOMRect]]\n  ;(js/console.log \"UPEL\" el-stylem)\n  ;(js/console.log \"UP\" (.-top position)) ;; FLOAT, also (.-left position)\n  ;(adom/set-el-attr el \"style\" (adom/sty-map>str (assoc el-stylem :top (str (- (.-top position) 1) \"px\"))))\n  ;(adom/set-el-attr el \"style\" (adom/sty-map>str (assoc el-stylem :top (str (+ (.-top position) 0) \"px\"))))\n;        position (.getBoundingClientRect el)\n        ;box-shadow (:box-shadow el-stylem)]\n  ;(adom/set-el-attr el \"style\" (adom/sty-map>str (assoc el-stylem :top .-top position) 0) \"px\"))))\n;    (js/console.log \"BOXY\" (adom/sty-str>map (adom/get-el-attr el \"style\")))\n  ;(js/setTimeout (fn [e]\n  ;                 (press-up e)) 1000)\n\n;; check for z-index\n;; (if found\n;;    (make 1 more than shadow)\n;;    (add z 1 more than shadow))\n;; add-events:\n;;    mousedown: drop top div,remove box shadow\n;;    mouseup : lift top div,return box shadow\n;; FAIL\n;;  :mouse-down (fn [e] (putil/invoke \"piflow.employee/press-down\" e))  ;; FAIL\n;;  :mouse-up (fn [e] (putil/invoke \"piflow.employee/press-up\" e)) ;; FAIL\n;;  :on-mouse-down (fn [e] (putil/invoke \"piflow.employee/press-down\" e)) ;; FAIL\n;;  :on-mouse-up (fn [e] (putil/invoke \"piflow.employee/press-up\" e)) ;; FAIL\n;; SUCC                   \n;;  :onmousedown (fn [e] (putil/invoke \"piflow.employee/press-down\" e))\n;;  :onmouseup (fn [e] (putil/invoke \"piflow.employee/press-up\" e))\n;;  :on-click (fn [e] (putil/invoke \"piflow.employee/update-flux-employee\"   (cont-stamps-detail employee)))\n;\n; went with a js solution, and am calling out to it from cljs\n;   cljs implementation i came up with was crazy slow:\n;(defn press-up [e]\n;  (let [el (.-target e)\n;        el-stylem (adom/sty-str>map (adom/get-el-attr el \"style\"))]\n;    (adom/set-el-attr el \"style\" (adom/sty-map>str (assoc el-stylem :transform  \"scaleX(1) scaleY(1)\")))))\n;(defn press-down [e]\n;  (let [el (.-target e)\n;        el-stylem (adom/sty-str>map (adom/get-el-attr el \"style\"))]\n;    (adom/set-el-attr el \"style\" (adom/sty-map>str (assoc el-stylem :transform  \"scaleX(0) scaleY(0)\")))\n;    (js/setTimeout press-up 23 e))) ;; 23 milliseconds, opt for timeout due onmouseup requires mouse over the div\n\n;;  border: 1px solid #aaa;\n;;  box-shadow: 0 10px 0 -5px #aae, 0 20px 0 -10px #eaa, 0 30px 0 -16px #aee;\n\n;(js/console.log \"!!\" (adom/sty-str>map (:style (sty {:background-color \"3px\" :height \"1em\" :float :left})))) => !! {:background-color 3px, :height 1em, :float left}\n\n;(defn a-e-bin-shadow [caster] ;; hiccup in; hiccup out\n;  (let [caster-style (adom/sty-str>map (:style caster))\n;        shadow [:div]]))\n\n;(defn chk-caster []\n;  [:div#chks\n;   (conj\n;    {:on-click (fn [e] (putil/invoke \"piflow.ui/change-bc\" e))}\n;    (sty {:width \"6em\" :height \"6em\" :float :left :background-color \"#eee\"}))])\n\n;   {:onfocus (fn [e] (js/console.log \"FOCUS\"))} ;; fails on DIVs\n  ;:tabindex \"-1\" ;; allows focus ;; fails on DIVs\n  ;   {:onfocusout (fn [e] (js/console.log \"FOCUSOUT\"))} ;; fails on DIVs\n\n;(def ncont_title {:top \"2em\"})\n;(defn _cont-nav-title []  ;; atom in, hiccup out ; nav-title-list [{:link \"PROJ.ns/fn\" :titlte \"\"},..]\n;  [:div (osty ncont_title)\n;   [:div (osty title_box)]\n;   (for [title-map @nav-title-list]\n;     [:a (conj (rsty link_home)\n;               {:id (str \"nav-\" (putil/index-of title-map @nav-title-list))}\n;               {:on-click (fn [e] (adom/update-flux (putil/invoke (:link title-map))))})\n;      (str (:title title-map) \"/\")])])\n;\n;(defn _cont-title [title]\n;  [:div (osty ncont_title)\n;   [:div (osty title_box)]\n;   [:a (osty link_home) title]])\n\n;:background-image \"conic-gradient(pink 70deg,lightblue 0 235deg,orange 0)\"\n                     ;:justify-content :center\n            ;        :align-items :center\n"]}