AWS-VAULT
Last updated 20220515
https://github.com/99designs/aws-vault
Secure Access to AWS Cloud Services
Install
Grab the latest release from https://github.com/99designs/aws-vault/releases
Place it in your PATH
Virtualenv
Use within a virtualenv for API access via awscli.
$ virtualenv ~/venv/aws --python=python3
created virtual environment CPython3.6.9.final.0-64 in 5058ms
$ source ~/venv/alp/bin/activate
(aws) $ python3 -m pip install --upgrade pip
Successfully installed pip-*
(aws)$ python3 -m pip install awscli botocore   
...
Successfully installed PyYAML-5.4.1 awscli-1.19.30 botocore-1.20.30 colorama-0.4.3 docutils-0.15.2 jmespath-0.10.0 pyasn1-0.4.8 python-dateutil-2.8.1 rsa-4.5 s3transfer-0.3.4 six-1.15.0 urllib3-1.26.4
(aws) $ aws-vault exec PROFILE -- aws sts get-caller-identity
Backends
aws-vault has support for a number of backends and will check for them sequentially and use the first one found.
    • macOS Keychain 
    • Windows Credential Manager 
    • Secret Service (Gnome Keyring, KWallet) 
    • KWallet 
    • Pass 
    • Encrypted file 
		https://github.com/99designs/aws-vault#vaulting-backends
On most Linux systems this will be Secret Service.  
I have had frustrations when working with Gnome Keyring so I like to use the password manager I use; the Linux Password Store pass.
To ensure aws-vault uses pass for its backend we will need to add a line to the ~/.bashrc file that sets the aws-vault backend at each bash invocation:
echo “export AWS_VAULT_BACKEND=pass” >> ~/.bashrc
echo “export AWS_VAULT_PASS_PREFIX=aws-vault” >> ~/.bashrc
The prefix will help keep the pass tree organised.
Use
Roles
Interact with your environment via a role assumed by your user
Add the credentials from a user to aws-vault as a user profile then add the role profile manually to ~/.aws/config
$ cat ~/.aws/config   
[profile USER-PROFILE]
                      
[profile ROLE-PROFILE]
region = us-east-2    
source_profile = USER-PROFILE
role_arn = arn:aws:iam::22222222222:role/ReadOnly
Add
Add new AWS credentials for the a profile
$ aws-vault add PROFILE
Enter Access Key Id: ABDCDEFDASDASF
Enter Secret Key: %
Exec
Execute a command using temporary credentials
$ aws-vault exec PROFILE -- CMD ARGS
$ aws-vault exec PROFILE -- aws s3 ls

TTL
Use the -d flag to assign a session length between 1min and 4 hours.
$ aws-vault exec –help
. . .                 
  -d, --duration=DURATION        Duration of the temporary or assume-role
                                 session. Defaults to 1h
$ aws-vault exec -d 4h PROFILE – COMMAND

Many roles have limits on the length of the temporary credential expiry
$ aws-vault exec -d 5h PROFILE -- aws sts get-caller-identity
aws-vault: error: exec: Failed to get credentials for PROFILE: ValidationError: The requested DurationSeconds exceeds the MaxSessionDuration set for this role.
	status code: 400, request id: 11111111-1111-1111-1111-1111111111111
Logging into AWS console
You can use the aws-vault login command to open a browser window and login to AWS Console
$ aws-vault login PROFILE
